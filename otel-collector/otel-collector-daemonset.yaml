apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel
  namespace: opentelemetry
spec:
  mode: daemonset
  serviceAccount: otel-collector-daemonset
  volumeMounts:
    - name: varlogpods
      mountPath: /var/log/pods
      readOnly: true
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true
  volumes:
    - name: varlogpods
      hostPath:
        path: /var/log/pods
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
  env:
    - name: DASH0_AUTHORIZATION_TOKEN
      valueFrom:
        secretKeyRef:
          name: dash0-secrets
          key: dash0-authorization-token
    - name: K8S_NODE_NAME
      valueFrom:
        fieldRef:
          fieldPath: spec.nodeName
  config:

    exporters:
      otlp/dash0:
        auth:
          authenticator: bearertokenauth/dash0
        endpoint: ingress.eu-west-1.aws.dash0-dev.com:4317
      otlp/jaeger:
        endpoint: jaeger-collector.default.svc.cluster.local.:4317
        tls:
          insecure: true
      otlphttp/prometheus:
        endpoint: http://prometheus.default.svc.cluster.local:9090/api/v1/otlp
        tls:
          insecure: true

    extensions:
      bearertokenauth/dash0:
        scheme: Bearer
        token: ${env:DASH0_AUTHORIZATION_TOKEN}
      health_check:
        endpoint: "0.0.0.0:13133"

    processors:
      batch: {}
      resource:
        attributes:
          - key: k8s.node.name
            value: "${K8S_NODE_NAME}"
            action: upsert
          - key: service.instance.id
            from_attribute: k8s.pod.uid
            action: insert

      resourcedetection:
        detectors:
        - system
        - k8snode
        system:
          resource_attributes:
            host.name:
              enabled: false

      k8sattributes:
        extract:
          metadata:
          - k8s.cluster.uid
          - k8s.cronjob.name
          - k8s.daemonset.name
          - k8s.daemonset.uid
          - k8s.deployment.name
          - k8s.deployment.uid
          - k8s.job.name
          - k8s.job.uid
          - k8s.namespace.name
          - k8s.node.name
          - k8s.pod.hostname
          - k8s.pod.ip
          - k8s.pod.name
          - k8s.pod.start_time
          - k8s.pod.uid
          - k8s.replicaset.name
          - k8s.replicaset.uid
          - k8s.statefulset.name
          - k8s.statefulset.uid
          - container.image.name
          - container.image.tag
        filter:
          node_from_env_var: K8S_NODE_NAME
        passthrough: false
        pod_association:
        - sources:
          - from: resource_attribute
            name: k8s.pod.ip
        - sources:
          - from: resource_attribute
            name: k8s.pod.uid
        - sources:
          - from: connection
      memory_limiter:
        check_interval: 1s
        limit_percentage: 50
        spike_limit_percentage: 30

    receivers:
      kubeletstats:
        collection_interval: 20s
        auth_type: 'serviceAccount'
        endpoint: '${env:K8S_NODE_NAME}:10250'
        insecure_skip_verify: true
        metrics:
          container.cpu.utilization:
            enabled: false
          k8s.node.cpu.utilization:
            enabled: false
          k8s.pod.cpu.utilization:
            enabled: false
          container.cpu.usage:
            enabled: true
          k8s.node.cpu.usage:
            enabled: true
          k8s.pod.cpu.usage:
            enabled: true
          k8s.pod.cpu_limit_utilization:
            enabled: true
          k8s.pod.cpu_request_utilization:
            enabled: true
          k8s.pod.memory_limit_utilization:
            enabled: true
          k8s.pod.memory_request_utilization:
            enabled: true
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      filelog:
        exclude:
          - /var/log/pods/kube-system_*/*/*.log
        include:
          - /var/log/pods/*/*/*.log
        start_at: beginning
        include_file_path: true
        operators:
        - id: container-parser
          type: container
          add_metadata_from_filepath: true
        - type: trace_parser
          trace_id:
            parse_from: attributes.trace_id
          span_id:
            parse_from: attributes.span_id
          trace_flags:
            parse_from: attributes.trace_flags
  
    connectors:
      spanmetrics: {}

    service:
      extensions:
        - bearertokenauth/dash0
        - health_check
      pipelines:
        logs:
          exporters:
            - otlp/dash0
          processors:
            - memory_limiter
            - k8sattributes
            - resourcedetection
            - batch
            - resource
          receivers:
            - otlp
            - filelog
        metrics:
          exporters:
            - otlp/dash0
            - otlphttp/prometheus
          processors:
            - memory_limiter
            - k8sattributes
            - resourcedetection
            - batch
            - resource
          receivers:
            - spanmetrics
            - otlp
            - kubeletstats
        traces:
          exporters:
            - otlp/dash0
            - otlp/jaeger
            - spanmetrics
          processors:
            - memory_limiter
            - k8sattributes
            - resourcedetection
            - batch
            - resource
          receivers:
            - otlp
      telemetry:
        logs:
          level: debug
        metrics:
          address: 0.0.0.0:8888